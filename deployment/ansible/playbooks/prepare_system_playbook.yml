---
- name: Prepare system
  hosts: backend_hosts
  become: yes
  vars:
    venv_path: /opt/docker_venv
    venv_python: python3
  vars_files:
    - ../ansible_vault.yml
  tasks:

    # ======= INSTALL APT PACKAGES =======
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install common packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
          - python3.10-venv
        state: present

    - name: Create venv directory
      file:
        path: "{{ venv_path }}"
        state: directory
        mode: '0755'

    - name: Create Python venv
      command: "{{ venv_python }} -m venv {{ venv_path }}"
      args:
        creates: "{{ venv_path }}/bin/activate"

    # ======= INSTALL DOCKER IF NOT ALREADY =======
    - name: Check if Docker is already installed
      command: docker --version
      register: docker_already_installed
      changed_when: false
      failed_when: false

    - name: Show Docker version if installed
      debug:
        msg: "Docker already installed: {{ docker_already_installed.stdout }}"
      when:
        - docker_already_installed.rc == 0

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when:
        - docker_already_installed.rc != 0

    - name: Create Docker keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when:
        - docker_already_installed.rc != 0

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when:
        - docker_already_installed.rc != 0

    - name: Install Docker and Docker Compose Plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
      when:
        - docker_already_installed.rc != 0

    # ======= INSTALL PYTHON PACKAGES =======
    - name: Upgrade pip in venv
      pip:
        name: pip
        state: latest
        virtualenv: "{{ venv_path }}"
        virtualenv_python: "{{ venv_python }}"

    - name: Install Docker Python module in venv
      pip:
        name: docker
        state: present
        virtualenv: "{{ venv_path }}"
        virtualenv_python: "{{ venv_python }}"

    # ======= HEALTH CHECK =======
    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user is defined

    - name: Verify Docker Compose Plugin installation
      command: docker compose version
      register: compose_version
      changed_when: false

    - name: Display Docker Compose version
      debug:
        var: compose_version.stdout
