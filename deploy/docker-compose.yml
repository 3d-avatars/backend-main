services:
  postgres:
    image: postgres:14
    env_file:
      - ../.env
    hostname: ${POSTGRES_HOST}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 2
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: "on-failure"
    networks:
      - main-backend-net

  backend-main:
    build:
      context: ../
      dockerfile: ./build/Dockerfile
    env_file:
      - ../.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    restart: "on-failure"
    networks:
      - "main-backend-net"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    env_file:
      - ../.env
    hostname: ${RABBITMQ_HOST}
    restart: "on-failure"
    ports:
      - "${RABBITMQ_PORT_MANAGEMENT}:15672"
      - "${RABBITMQ_PORT}:5672"
    networks:
      - main-backend-net
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  postgres_data:
  rabbitmq-data:

networks:
  banner-net:
    driver: bridge
    name: main-backend-net
