// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/3d-model-generation/input-image": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Upload input image for generating 3d model",
                "operationId": "3d-model-generation-post-input-image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Input image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UploadInputImageResponse"
                        }
                    }
                }
            }
        },
        "/v1/3d-model-generation/task/:id/result": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "model/gltf-binary"
                ],
                "summary": "Get result .glb file",
                "operationId": "3d-model-generation-get-result-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of task generated after uploading input image",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/v1/3d-model-generation/task/:id/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get status of generating 3d model task",
                "operationId": "3d-model-generation-task-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of task generated after uploading input image",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetTaskStatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.GetTaskStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dtos.UploadInputImageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "request_uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/3d-avatar/api",
	Schemes:          []string{},
	Title:            "3D Avatar API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
